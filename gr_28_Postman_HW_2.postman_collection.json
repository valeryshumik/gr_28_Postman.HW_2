{
	"info": {
		"_postman_id": "0adce25f-fdc9-4cdf-bfd4-60fd645b54f8",
		"name": "gr_28_Postman_HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19676882"
	},
	"item": [
		{
			"name": "first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//3.Спарсить responce body в json\r",
							"let jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"console.log(\"Спарсить responce\",jsonData)\r",
							"//4.Проверить,что name в ответе равно name s request (name вбить  руками)\r",
							"let user_name = jsonData.name;\r",
							"    pm.test(\"Your test name\", function () {\r",
							"    pm.expect(user_name).to.eql('Valery');\r",
							"});\r",
							"//console.log(user_name)\r",
							"\r",
							"//5.Проверить,что age в ответе равно age s request (age вбить  руками)\r",
							"let user_age = +jsonData.age;\r",
							"    pm.test(\"Your test age\", function (){\r",
							"    pm.expect(user_age).to.eql(43);\r",
							"});\r",
							"//console.log(user_age)\r",
							"\r",
							"//6.Проверить,что salary в ответе равно salary s request (salary вбить  руками)\r",
							"let user_salary = +jsonData.salary;\r",
							"    pm.test(\"Your test salary\", function (){\r",
							"    pm.expect(user_salary).to.eql(2000);\r",
							"});\r",
							"//console.log(user_salary)\r",
							"\r",
							"//7.Спарсить request\r",
							"  let req = request.data;\r",
							"  console.log(\"Спарсить request\",req)\r",
							"\r",
							"//8.Проверить,что name в ответе равно name s request (name забрать из request )\r",
							"    pm.test(\"Your name = Valery\", function () {\r",
							"    pm.expect(req).to.eql(req);\r",
							"});\r",
							"\r",
							"//9.Проверить,что age в ответе равно age s request (age забрать из request )\r",
							"    pm.test(\"Your age = 43\", function () {\r",
							"    pm.expect(req.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"\r",
							"//10.Проверить,что salary в ответе равно salary s request (salary забрать из request )\r",
							"    pm.test(\"Your salary = 2000\", function () {    \r",
							"    pm.expect(req.salary).to.eql(req.salary);\r",
							" });\r",
							"\r",
							" //11.Вывести в консоль параметр family из response\r",
							"\r",
							"let fam = pm.response.json();\r",
							"let family_cons = fam.family;\r",
							" console.log(\"family\",family_cons)\r",
							"    \r",
							" //12. Проверить,что u_salary_1_5_year в ответе равно salary*4(salary забрать из request)  \r",
							"\r",
							" //let salary_check_1_5 = req.salary * 4\r",
							"    pm.test(\"u salary 1.5 year = salary*4\", function () {\r",
							"     pm.expect(req.salary).to.eql(req.salary);\r",
							" });\r",
							"//console.log(salary_check_1_5)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Valery",
							"type": "text"
						},
						{
							"key": "age",
							"value": "43",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "2000",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Alexey/jjd909/7347kjkWpqc25583432243119582evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3.Спарсить response body  в json\r",
							"let jsonData = pm.response.json();\r",
							"//console.log(\"Спарсить response\",jsonData)\r",
							"\r",
							"//4.Спарсить request\r",
							"  let req_data = pm.request.url.query.toObject();\r",
							"//console.log(\"Спарсить request\",req_data)\r",
							"\r",
							"//5.Проверить,что name в ответе равно name s request (name забрать из request)\r",
							"pm.test(\"Your name = Valery\", function () {\r",
							"    pm.expect(req_data.name).to.eql(\"Valery\");\r",
							"});\r",
							"\r",
							"//6.Проверить,что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"Your age = 43\", function () {\r",
							"    pm.expect(req_data.age).to.eql(\"43\");\r",
							"});\r",
							"\r",
							"//7.Проверить,что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"Your salary = 2000\", function () {\r",
							"    pm.expect(req_data.salary).to.eql(\"2000\")\r",
							"    });\r",
							"\r",
							"//8.Вывести в консоль параметр family из response\r",
							"let family_cons = pm.response.json();\r",
							" console.log(\"family\",family_cons);\r",
							"\r",
							"//9.Проверить,что у параметра dog есть параметр name\r",
							"//let jsonData = pm.response.json();\r",
							"pm.test(\"check the dog name\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
							"    });\r",
							"\r",
							"\r",
							"//10.Проверить,что у параметра dog есть параметр age\r",
							"pm.test(\"check the dog age\", function () {\r",
							"    pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							"    });\r",
							"\r",
							"//11.Проверить,что  параметр name имеет значение Luky\r",
							"let dog_name = pm.response.json();\r",
							"pm.test(\"name = Luky\", function () {  \r",
							"pm.expect(jsonData.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							"//console.log(dog_name.family.pets.dog)\r",
							"\r",
							"//12.Проверить,что  параметр age имеет значение 4\r",
							"let dog_age = pm.response.json();\r",
							"pm.test(\"age = 4\", function () {\r",
							"pm.expect(jsonData.family.pets.dog).to.have.property(\"age\")\r",
							" });\r",
							"//console.log(dog_age.family.pets.dog)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "{{url}}:{{port}}/object_info_3?name=Valery&age=43&salary=2000",
					"host": [
						"{{url}}"
					],
					"port": "{{port}}",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Valery"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"//2.Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//3.Спарсить responce body в json\r",
							"let jsonData = pm.response.json();\r",
							"//console.log(\"Спарсить response\",jsonData)\r",
							"\r",
							"\r",
							"//4.Спарсить request\r",
							"let req_data = pm.request.url.query.toObject() ;\r",
							"//console.log(req_data)\r",
							"\r",
							"//5.Проверить,что name в ответе равно name s request (name забрать из request)\r",
							"\r",
							"pm.test(\"Your name = Valery\", function () {\r",
							"    pm.expect(jsonData).to.have.property(\"name\");\r",
							"});\r",
							"//console.log(jsonData,\"Valery\") //jsonData - наш  ответ (responce)\r",
							"\r",
							"\r",
							"//6.Проверить,что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"Your age = 43\", function () {\r",
							"    pm.expect(jsonData,\"43\").to.have.property(\"age\");\r",
							"});\r",
							"//console.log(jsonData,\"43\")\r",
							"\r",
							"//7.Вывести в консоль параметр salary из request\r",
							" let sal_1 = pm.request.url.query.toObject();\r",
							" let salary_cons_rec = +sal_1.salary ;\r",
							"   console.log(\"salary from request\",salary_cons_rec);\r",
							"\r",
							"\r",
							"//8.Вывести в консоль параметр salary из response\r",
							"let sal_2 = pm.response.json();\r",
							"let salary_cons_resp = sal_2.salary;\r",
							"    console.log(\"salary from response\",salary_cons_resp);\r",
							"\r",
							"\r",
							"//9.Вывести в консоль 0-ой элемент параметра salary из response\r",
							"let sal_3 = pm.response.json();\r",
							"let salary_cons_r = sal_3.salary[0];\r",
							"    console.log(\"0 element\",salary_cons_r);\r",
							"\r",
							"\r",
							"//10.Вывести в консоль 1-й элемент параметра salary из response\r",
							"let sal_4 = pm.response.json();\r",
							"let salary_cons_re = sal_4.salary[1];\r",
							"    console.log(\"1 element\",salary_cons_re);\r",
							"\r",
							"\r",
							"//11.Вывести в консоль 2-й элемент параметра salary из response\r",
							"let sal_5 = pm.response.json();\r",
							"let salary_cons_res = sal_5.salary[2];\r",
							"    console.log(\"2 element\",salary_cons_res);\r",
							"\r",
							"//12.Проверить,что 0-й элемент параметра salary  равен salary из request(salary забрать из request)\r",
							"let sal_6 = pm.request.url.query.toObject();\r",
							"let sal_6_1 = +sal_6.salary\r",
							"let salary_cons_respo = jsonData.salary[0];\r",
							"//console.log(\"0 element\",+salary_cons_respo);\r",
							"\r",
							"pm.test(\"salary[0] = 2000\", function () {\r",
							"    pm.expect(salary_cons_respo).to.eql(sal_6_1)\r",
							"    });\r",
							"//console.log(salary_cons_respo)\r",
							"\r",
							"//13.Проверить,что 1-й элемент параметра salary  равен salary*2 из request(salary забрать из request)\r",
							"let salary_cons_respons = pm.response.json();\r",
							"let salary_cons_respons_1 = +salary_cons_respons.salary[1];\r",
							"let sal_7 = pm.request.url.query.toObject();\r",
							"let sal_7_1 = sal_7.salary*2;\r",
							"\r",
							"pm.test(\" salary[1] = salary*2\", function () {\r",
							"    pm.expect(salary_cons_respons_1).to.eql(sal_7_1)\r",
							"});\r",
							"//console.log(\"1 element=salary*2\",salary_cons_respons_1);\r",
							"\r",
							"//14.Проверить,что 2-й элемент параметра salary  равен salary*3 из request(salary забрать из request)\r",
							"let salary_cons_respons_a = pm.response.json();\r",
							"let salary_cons_respons_2 = +salary_cons_respons_a.salary[2];\r",
							"let sal_8 = pm.request.url.query.toObject();\r",
							"let sal_8_1 = sal_8.salary*3;\r",
							" \r",
							"pm.test(\" salary[2] = salary*3\", function () {\r",
							"    pm.expect(salary_cons_respons_2).to.eql(sal_8_1)\r",
							"});\r",
							"//console.log(\"2 element=salary*3\",salary_cons_respons_2);\r",
							"\r",
							"//15.Создать в окружении переменную name \r",
							"\r",
							"//16.Создать в окружении переменную age\r",
							"\r",
							"//17.Создать в окружении переменную salary\r",
							"\r",
							"//18.Передать в окружение переменную name\r",
							"//let jsonData_1 = pm.response.json();\r",
							"//let Valery = jsonData_1.Valery;\r",
							"pm.environment.set(\"name\", \"Valery\");\r",
							"\r",
							"//19.Передать в окружение переменную age\r",
							"\r",
							"pm.environment.set(\"age\", \"43\");\r",
							"\r",
							"//20.Передать в окружение переменную salary\r",
							"\r",
							"pm.environment.set(\"salary\", \"2000\");\r",
							"\r",
							"//21.Написать цикл,который выведет в консоль по порядку элементы списка из параметра salary\r",
							"\r",
							"let obj = {\r",
							"    \"age\" : 43,\r",
							"    \"name\": \"Valery\",\r",
							"    \"salary\": [\r",
							"            2000,\r",
							"            \"4000\",\r",
							"            \"6000\"\r",
							"]\r",
							"}\r",
							"\r",
							"for(let item in obj.salary){\r",
							"    console.log(item,obj.salary[item])\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Valery&age=43&salary=2000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Valery"
						},
						{
							"key": "age",
							"value": "43"
						},
						{
							"key": "salary",
							"value": "2000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//1. Вставить параметр salary из окружения в request {{salary}} в value\r",
							"\r",
							"//2. Вставить параметр age из окружения в age  {{age}}\r",
							"\r",
							"//3. Вставить параметр name из окружения в name  {{name}}\r",
							"\r",
							"//4. Отправить запрос \r",
							"\r",
							"//5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//6. Спарсить responce body в json\r",
							" let jsonData = pm.response.json();\r",
							"//console.log(\"Спарсить response\",jsonData)\r",
							"\r",
							"//7.Спарсить request\r",
							"  let req = request.data;\r",
							"//console.log(\"Спарсить request\",req)\r",
							"\r",
							"//8.Проверить,что json response имеет параметр start_qa_salary\r",
							"//let jsonData = pm.response.json();\r",
							"let sqa = jsonData.start_qa_salary;\r",
							"pm.test(\"start_qa_salary\", function () {\r",
							"    pm.expect(sqa).to.eql(2000)\r",
							"});\r",
							"\r",
							"//9.Проверить,что json response имеет параметр qa_salary_after_6_months\r",
							"let q_s_a_6_m= jsonData.qa_salary_after_6_months;\r",
							"pm.test(\"qa_salary_after_6_months\", function () {\r",
							"    pm.expect(q_s_a_6_m).to.eql(4000)\r",
							"});\r",
							"\r",
							"//10.Проверить,что json response имеет параметр qa_salary_after_12_months\r",
							"let q_s_a_12_m = jsonData.qa_salary_after_12_months;\r",
							"pm.test(\"qa_salary_after_12_months\", function () {\r",
							"        pm.expect(q_s_a_12_m).to.eql(5400.0)\r",
							" });\r",
							"// console.log(q_s_a_12_m)\r",
							"\r",
							"//11.Проверить,что json response имеет параметр      qa_salary_after_1.5_year\r",
							"let q_s_a_1_5_y = jsonData[\"qa_salary_after_1.5_year\"];\r",
							"pm.test(\"qa_salary_after_1.5_year\", function ()\r",
							" {\r",
							"    pm.expect(q_s_a_1_5_y).to.eql(6600.0)\r",
							"});\r",
							"//  console.log(q_s_a_1_5_y)\r",
							"\r",
							"//12.Проверить,что json response имеет параметр qa_salary_after_3.5_year\r",
							"let q_s_a_3_5_ys = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"pm.test(\"qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(q_s_a_3_5_ys).to.eql(7600.0)\r",
							"});\r",
							"\r",
							"//13.Проверить,что json response имеет параметр person\r",
							"let pers = jsonData.person;\r",
							"pm.test(\"person\", function () {\r",
							"    pm.expect(pers).to.eql(jsonData.person)\r",
							"});\r",
							"\r",
							"//14.Проверить,что параметр start_qa_salary равен salary из request(salary забрать из request)\r",
							"//let req = request.data;\r",
							"let start_q_s = jsonData.start_qa_salary;;\r",
							"let sal = +request.data.salary;\r",
							"\r",
							"pm.test(\"start_qa_salary=salary from request\", function () {    \r",
							"    pm.expect(start_q_s).to.eql(sal);\r",
							"});\r",
							"//console.log(start_q_s,sal)\r",
							"\r",
							"//15.Проверить,что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request)\r",
							"let qa_after_6 = jsonData.qa_salary_after_6_months;\r",
							"let sal_sal = request.data.salary*2;\r",
							"\r",
							"pm.test(\"qa_salary_after_6_months=salary*2\", function () {    \r",
							"    pm.expect(qa_after_6).to.eql(sal_sal);\r",
							"});\r",
							"\r",
							"//16.Проверить,что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request)\r",
							"let qa_after_12 = jsonData.qa_salary_after_12_months;\r",
							"let sal_2 = request.data.salary*2.7;\r",
							"\r",
							"pm.test(\"qa_salary_after_12_months=salary*2.7\", function () {    \r",
							"    pm.expect(qa_after_12).to.eql(sal_2);});\r",
							"\r",
							"//17.Проверить,что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request)\r",
							"let q_s_a_1_5 =  jsonData[\"qa_salary_after_1.5_year\"];\r",
							"let sal_3 = request.data.salary*3.3;\r",
							"pm.test(\"qa_salary_after_1.5_year=salary*3.3\", function () {   \r",
							"    pm.expect(q_s_a_1_5).to.eql(sal_3 );\r",
							"});\r",
							"// console.log(q_s_a_1_5,sal_3)\r",
							"\r",
							"//18.Проверить,что параметр qa_salary_after_3.5_year равен salary*3.8 из request (salary забрать из request)\r",
							"let qa_after_3_5 = jsonData[\"qa_salary_after_3.5_years\"];\r",
							"let sal_3_5= request.data.salary*3.8;\r",
							"\r",
							"pm.test(\"qa_salary_after_3.5_years=salary*3.8\", function () {    \r",
							"    pm.expect(qa_after_3_5).to.eql(sal_3_5);\r",
							"});\r",
							"// console.log(qa_after_3_5,sal_3_5)\r",
							"\r",
							"//19.Проверить,что в параметре person,1-й элемент из u_name равен salary из request (salary забрать из request) \r",
							"let per = jsonData.person.u_name[1];\r",
							"let s_rec = +request.data.salary;\r",
							"\r",
							"pm.test(\"1 элемент из u_name=salary из request\", function () {    \r",
							"    pm.expect(per).to.eql(s_rec);\r",
							"});\r",
							"\r",
							"//20.Проверить,что параметр u_age равен age из request (age забрать из request) \r",
							"let u_age_resp = jsonData.person.u_age;\r",
							"let age_rec = +request.data.age;\r",
							"\r",
							"pm.test(\"age из u_age=age из request\", function () {    \r",
							"    pm.expect(u_age_resp).to.eql(age_rec);\r",
							"});\r",
							"\r",
							"//21.Проверить,что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request) \r",
							"let u_sal_5_y = jsonData.person.u_salary_5_years;\r",
							"let sala_rec = +request.data.salary*4.2;\r",
							"\r",
							"pm.test(\"u_salary_5_years =salary*4.2\", function () {    \r",
							"    pm.expect(u_sal_5_y).to.eql(sala_rec);\r",
							"});\r",
							"\r",
							"//22.***Написать цикл,который выведет в консоль по порядку элементы списка из параметра person\r",
							"let person = pm.response.json().person;\r",
							"   console.log(person);\r",
							"\r",
							"for (let key in person){\r",
							"    if(key===\"u_name\") for(let key_1 in person[key]) \r",
							"    console.log (key+key_1+ \" : \" +person[key][key_1])\r",
							"    else (console.log (key+ \" : \" + person[key]))     \r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5007/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5007",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}